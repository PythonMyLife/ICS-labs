                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # Student ID : 517030910183
                            | # Name : Hou Zhengtong
                            | # Describe how and why you modified the baseline code.
                            | # 1: change jxx stuctures to avoid load/use hazzard
                            | # 2: loop unrolling and by testing with 2,4,5,6,7,8 ,I find that 7 is the best option
                            | # 3: Use iaddq instruction
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x000: 6300                 | 	xorq %rax,%rax		# count = 0;
0x002: c0f2f9ffffffffffffff | 	iaddq $-7,%rdx
0x00c: 705201000000000000   | 	jmp Whether
0x015:                      | L7:	
0x015: 50a70000000000000000 | 	mrmovq (%rdi), %r10	
0x01f: c0f73800000000000000 | 	iaddq $56, %rdi		
0x029: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	
0x033: 62aa                 | 	andq %r10, %r10	
0x035: 50a7d0ffffffffffffff | 	mrmovq -48(%rdi), %r10	
0x03f: 715200000000000000   | 	jle L6		
0x048: c0f00100000000000000 | 	iaddq $1, %rax
0x052:                      | L6:		
0x052: 40a60800000000000000 | 	rmmovq %r10, 8(%rsi)
0x05c: c0f63800000000000000 | 	iaddq $56, %rsi
0x066: 62aa                 | 	andq %r10, %r10	
0x068: 50a7d8ffffffffffffff | 	mrmovq -40(%rdi), %r10	
0x072: 718500000000000000   | 	jle L5		
0x07b: c0f00100000000000000 | 	iaddq $1, %rax		
0x085:                      | L5:		
0x085: 40a6d8ffffffffffffff | 	rmmovq %r10, -40(%rsi)	
0x08f: 62aa                 | 	andq %r10, %r10	
0x091: 50a7e0ffffffffffffff | 	mrmovq -32(%rdi), %r10
0x09b: 71ae00000000000000   | 	jle L4		
0x0a4: c0f00100000000000000 | 	iaddq $1, %rax		
0x0ae:                      | L4:		
0x0ae: 40a6e0ffffffffffffff | 	rmmovq %r10, -32(%rsi)	
0x0b8: 62aa                 | 	andq %r10, %r10	
0x0ba: 50a7e8ffffffffffffff | 	mrmovq -24(%rdi), %r10
0x0c4: 71d700000000000000   | 	jle L3		
0x0cd: c0f00100000000000000 | 	iaddq $1, %rax		
0x0d7:                      | L3:		
0x0d7: 40a6e8ffffffffffffff | 	rmmovq %r10, -24(%rsi)	
0x0e1: 62aa                 | 	andq %r10, %r10
0x0e3: 50a7f0ffffffffffffff | 	mrmovq -16(%rdi), %r10		
0x0ed: 710001000000000000   | 	jle L2		
0x0f6: c0f00100000000000000 | 	iaddq $1, %rax		
0x100:                      | L2:		
0x100: 40a6f0ffffffffffffff | 	rmmovq %r10, -16(%rsi)	
0x10a: 62aa                 | 	andq %r10, %r10
0x10c: 50a7f8ffffffffffffff | 	mrmovq -8(%rdi), %r10		
0x116: 712901000000000000   | 	jle L1		
0x11f: c0f00100000000000000 | 	iaddq $1, %rax		
0x129:                      | L1:		
0x129: 40a6f8ffffffffffffff | 	rmmovq %r10, -8(%rsi)
0x133: 62aa                 | 	andq %r10, %r10	
0x135: 714801000000000000   | 	jle L0		
0x13e: c0f00100000000000000 | 	iaddq $1, %rax
0x148:                      | L0:
0x148: c0f2f9ffffffffffffff | 	iaddq $-7, %rdx	
0x152:                      | Whether:
0x152: 751500000000000000   | 	jge L7
0x15b:                      | P0:
0x15b: c0f20700000000000000 | 	iaddq $7,%rdx
0x165: 766f01000000000000   | 	jg P1
0x16e: 90                   | 	ret
0x16f:                      | P1:
0x16f: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x179: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11
0x183: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x18d: 62aa                 | 	andq %r10, %r10
0x18f: 71a201000000000000   | 	jle P01
0x198: c0f00100000000000000 | 	iaddq $1, %rax
0x1a2:                      | P01:	
0x1a2: c0f2ffffffffffffffff | 	iaddq $-1, %rdx		# len-1 and setcc
0x1ac: 76b601000000000000   | 	jg P2
0x1b5: 90                   | 	ret
0x1b6:                      | P2:
0x1b6: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x1c0: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi)
0x1ca: 62bb                 | 	andq %r11, %r11
0x1cc: 71df01000000000000   | 	jle P02
0x1d5: c0f00100000000000000 | 	iaddq $1, %rax
0x1df:                      | P02:
0x1df: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x1e9: 76f301000000000000   | 	jg P3
0x1f2: 90                   | 	ret
0x1f3:                      | P3:
0x1f3: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x1fd: 40a71000000000000000 | 	rmmovq %r10, 16(%rdi)
0x207: 62aa                 | 	andq %r10, %r10
0x209: 711c02000000000000   | 	jle P03
0x212: c0f00100000000000000 | 	iaddq $1, %rax
0x21c:                      | P03:
0x21c: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x226: 763002000000000000   | 	jg P4
0x22f: 90                   | 	ret
0x230:                      | P4:
0x230: 50a72000000000000000 | 	mrmovq 32(%rdi), %r10
0x23a: 40b71800000000000000 | 	rmmovq %r11, 24(%rdi)
0x244: 62bb                 | 	andq %r11, %r11
0x246: 715902000000000000   | 	jle P04
0x24f: c0f00100000000000000 | 	iaddq $1, %rax
0x259:                      | P04:
0x259: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x263: 766d02000000000000   | 	jg P5
0x26c: 90                   | 	ret
0x26d:                      | P5:
0x26d: 50b72800000000000000 | 	mrmovq 40(%rdi), %r11
0x277: 40a72000000000000000 | 	rmmovq %r10, 32(%rdi)
0x281: 62aa                 | 	andq %r10, %r10
0x283: 719602000000000000   | 	jle P05
0x28c: c0f00100000000000000 | 	iaddq $1, %rax
0x296:                      | P05:
0x296: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x2a0: 76aa02000000000000   | 	jg P6
0x2a9: 90                   | 	ret
0x2aa:                      | P6:
0x2aa: 50a73000000000000000 | 	mrmovq 48(%rdi), %r10
0x2b4: 40b72800000000000000 | 	rmmovq %r11, 40(%rdi)
0x2be: 62bb                 | 	andq %r11, %r11
0x2c0: 71d302000000000000   | 	jle P06
0x2c9: c0f00100000000000000 | 	iaddq $1, %rax
0x2d3:                      | P06:
0x2d3: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
                            | 
0x2dd:                      | Done:
0x2dd: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x2de:                      | End:
                            | #/* $end ncopy-ys */
